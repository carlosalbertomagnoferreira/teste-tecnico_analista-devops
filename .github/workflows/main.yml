name: CI - CD
run-name: Executando CI-CD, executado por ${{ github.actor }}
on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

env:
  repositorio_nome_imagem: "magnocarlos1988/teste-tecnico_analista-devops"

jobs:
  CI:
    runs-on: ubuntu-latest
    outputs:
      tag-image: ${{ steps.meta.outputs.SHORT_SHA }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.repositorio_nome_imagem }}:${{ steps.meta.outputs.SHORT_SHA }}
            ${{ env.repositorio_nome_imagem }}:latest
      
      - name: Docker Scout
        id: docker-scout-environment
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          image: "${{ env.repositorio_nome_imagem }}:${{ steps.meta.outputs.SHORT_SHA }}"
          organization: ${{ vars.DOCKERHUB_USERNAME }}

  CD:
    needs: CI
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Muda vers√£o da imagem para deploy
        run: sed -i 's/latest/${{ needs.CI.outputs.tag-image }}/g' task-definitions/task.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan.tfout

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve tfplan.tfout

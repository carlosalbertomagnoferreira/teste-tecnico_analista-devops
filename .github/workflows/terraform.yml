name: IaC Terraform ECS

on:
  workflow_run: 
    workflows: ["CI Build Docker Image"]
    types: [completed]

  workflow_dispatch:

    inputs:
      apply:
        description: "Executar terraform apply"
        required: true
        default: 'false'
        type: choise
        options:
          - true
          - false

      plan_destroy:
        description: "Executar terraform plan destroy"
        required: true
        default: 'false'
        type: choise
        options:
          - true
          - false

      destroy:
        description: "Executar terraform destroy"
        required: true
        default: 'false'
        type: choise
        options:
          - true
          - false
  
jobs:
  call-main:
    uses: ./.github/workflows/main.yml
    with:
      message: "Short tag from main.yaml"

  Terraform:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: call-main
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Muda vers√£o da imagem para deploy
        run: sed -i 's/latest/${{ needs.call-main.outputs.tag-image }}/g' task-definitions/task.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan.tfout

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.tfout
        if: github.event.inputs.apply == 'true'

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -out=tfplan.tfout
        if: github.event.inputs.plan_destroy == 'true'

      - name: Terraform Destroy
        run: terraform apply -destroy -auto-approve tfplan.tfout
        if: github.event.inputs.destroy == 'true'
